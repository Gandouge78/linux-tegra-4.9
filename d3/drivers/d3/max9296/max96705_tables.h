/*
 * max96705_tables.h - Maxim MAX9286 GMSL1 Serializer
 *
 * Copyright (c) 2018, D3 Engineering.  All rights reserved.
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms and conditions of the GNU General Public License,
 * version 2, as published by the Free Software Foundation.
 *
 * This program is distributed in the hope it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef _MAX96705_TABLES_H_
#define _MAX96705_TABLES_H_

#include "max96705.h"

static const struct reg_sequence max96705_ser_input[] = {
	{0x08,0x01,2000}, // Serializer input gain and thresholds
	{0x97,0x5F,2000},
};

static const struct reg_sequence max96705_en_dbl_hven_hibw[] = {
	{0x07,0xC4,16000}, // DBL, HVEN, HIBW
};

static const struct reg_sequence max96705_retime_vs_hs[] = {
	{0x44,0x00}, /* 24-bit, VS delay in pixel cycle times from */
	{0x45,0x9C}, /* the VS input */
	{0x46,0x80},
	{0x47,0x00}, /* 24-bit, VS high in pixel cycle times */
	{0x48,0xB0},
	{0x49,0x00},
	{0x43,0x21}, /* GEN_VS, GEN_HS, VS_TRIG falling edge */
	{0x67,0xC4},
};

static const struct reg_sequence max96705_set_xbar[] = {
	{0x20,0x0B},
	{0x21,0x0A},
	{0x22,0x09},
	{0x23,0x08},
	{0x24,0x07},
	{0x25,0x06},
	{0x26,0x05},
	{0x27,0x04},
	{0x28,0x03},
	{0x29,0x02},
	{0x2A,0x01},
	{0x2B,0x00},
	{0x30,0x1B},
	{0x31,0x1A},
	{0x32,0x19},
	{0x33,0x18},
	{0x34,0x17},
	{0x35,0x16},
	{0x36,0x15},
	{0x37,0x14},
	{0x38,0x13},
	{0x39,0x12},
	{0x3A,0x11},
	{0x3B,0x10},
};

static const struct reg_sequence max96705_en_gmsl[] = {
	{0x04,0x87,16000},
};

static const struct reg_sequence max96705_en_him[] = {
	{ 0x4D, 0xC0, 5000 },	// HIM = 1, coax mode
};

static const struct reg_sequence max96705_en_cfg[] = {
	{ 0x04, 0x43, 5000 },	// Enable config link
};

static const struct reg_sequence max96705_en_dbl_hven[] = {
	{ 0x07, 0x84, 16000 },	// DBL, HVEN
};

/* Crossbar Setup */
static const struct reg_sequence max96705_crossbar[] = {
	{0x20,0x40},
	{0x21,0x40},
	{0x22,0x40},
	{0x23,0x40},
	{0x24,0x00},
	{0x25,0x01},
	{0x26,0x02},
	{0x27,0x03},
	{0x28,0x04},
	{0x29,0x05},
	{0x2A,0x06},
	{0x2B,0x07},
	{0x30,0x40},
	{0x31,0x40},
	{0x32,0x40},
	{0x33,0x40},
	{0x34,0x10},
	{0x35,0x11},
	{0x36,0x12},
	{0x37,0x13},
	{0x38,0x14},
	{0x39,0x15},
	{0x3A,0x16},
	{0x3B,0x17},
};

static const struct reg_sequence max96705_xb_flip_bit_order[] = {
	{0x20,0x0B},
	{0x21,0x0A},
	{0x22,0x09},
	{0x23,0x08},
	{0x24,0x07},
	{0x25,0x06},
	{0x26,0x05},
	{0x27,0x04},
	{0x28,0x03},
	{0x29,0x02},
	{0x2A,0x01},
	{0x2B,0x00},
	{0x30,0x1B},
	{0x31,0x1A},
	{0x32,0x19},
	{0x33,0x18},
	{0x34,0x17},
	{0x35,0x16},
	{0x36,0x15},
	{0x37,0x14},
	{0x38,0x13},
	{0x39,0x12},
	{0x3A,0x11},
	{0x3B,0x10},
};

/* Post-Camera Setup */
static const struct reg_sequence max96705_en_link[] = {
	{ 0x04, 0x87, 16000 },	// Enable GMSL link
	{ 0x07, 0xC4, 16000 },	// DBL,HIBW,HVEN
};

#endif /* _MAX96705_TABLES_H_ */
